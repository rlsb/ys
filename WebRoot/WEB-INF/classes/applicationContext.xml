<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">


	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource">
		<!-- 定义数据库驱动 -->
		<property name="driverClassName"
			value="com.mysql.jdbc.Driver">
		</property>
		<property name="url"
			value="jdbc:mysql://localhost:3306/yunshi">
		</property>
		<property name="username" value="root"></property>
		<property name="password" value="123456"></property>
		 <property name="maxActive"> <value>10</value> </property> 
         <property name="maxIdle">  <value>10</value> </property> 
    
	</bean>
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>

			</props>
		</property>
		<property name="mappingResources">
			<list>
				<value>org/model/Login.hbm.xml</value>
				<value>org/model/Glyxx.hbm.xml</value></list>
		</property>
	</bean>
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<!-- HibernateTransactionManager   bean需要依赖注入一个SessionFactory bean的引用-->
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>
	<!--   配置事务拦截器-->
	<bean id="transactionInterceptor"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<!--   事务拦截器bean需要依赖注入一个事务管理器 -->
		<property name="transactionManager" ref="transactionManager" />
		<property name="transactionAttributes">
			<!-- 下面定义事务传播属性-->
			<props>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
	
	<!-- 定义BeanNameAutoProxyCreator,该bean无需被引用，因此没有id属性,这个bean根据事务拦截
		器为目标bean自动创建事务代理-->
	<bean
		class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<!-- 指定对满足哪些bean name的bean自动生成业务代理  -->
		<property name="beanNames">
			<!--   下面是所有需要自动创建事务代理的bean-->
			<list>
				<value>LoginService</value>
				<value>glyService</value>
			</list>
			<!--   此处可增加其他需要自动创建事务代理的bean-->
		</property>
		<!--   下面定义BeanNameAutoProxyCreator所需的事务拦截器-->
		<property name="interceptorNames">
			<list>
				<value>transactionInterceptor</value>
				<!-- 此处可增加其他新的Interceptor -->
			</list>
		</property>
	</bean>
	<bean id="loginAction" class="org.action.LoginAction">
		<property name="loservice">
			<ref bean="LoginService" />
		</property>
	</bean>
	<bean id="LoginService" class="org.service.imp.LoginManage">
		<property name="lDao">
			<ref bean="login" />
		</property>
	</bean>
	<bean id="login" class="org.dao.imp.LoginImp">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<!-- 关于Gly -->
	<bean id="glyaction" class="org.action.GlyAction">
		<property name="glyService">
			<ref bean="glyService"/>
		</property>
	</bean>
	<bean id="glyService" class="org.service.imp.GlyManage">
		<property name="glyDao">
			<ref bean="gly"/>
		</property>
	</bean>
	<bean id="gly" class="org.dao.imp.GlyImp">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	
	<bean id="glySelect" class="org.action.GlyAction">
		<property name="glyService">
			<ref bean="glyService"/>
		</property>
	</bean>
	<bean id="GlygetList" class="org.action.GlyAction">
	</bean>

	<bean id="GlyInfo" class="org.action.GlyAction">
		<property name="glyService">
			<ref bean="glyService"/>
		</property></bean>
		
	<bean id="DeleteGly" class="org.action.GlyAction">
		<property name="glyService">
			<ref bean="glyService"/>
		</property></bean>
		
	<bean id="UpdateGlyView" class="org.action.GlyAction">
		<property name="glyService">
			<ref bean="glyService"/>
		</property></bean>
		
	<bean id="UpdateGly" class="org.action.GlyAction">
		<property name="glyService">
			<ref bean="glyService"/>
		</property></bean>
	
	</beans>